---
- name: installing postgresql
  apt: pkg=postgresql
 
# ключ официального apt-репозитория проекта postgresql
- name: add apt key
  apt_key: url=http://apt.postgresql.org/pub/repos/apt/ACCC4CF8.asc state=present

# добавляем репозиторий, адрес формируется на основе имени релиза установленной ОС
- name: add apt repo
  apt_repository: repo='deb http://apt.postgresql.org/pub/repos/apt/ ${ansible_lsb.codename}-pgdg main'

# устанавливаем пакет с ключём
- name: install pgdg-key
  apt: pkg=pgdg-keyring state=latest update_cache=yes

# устанавливаем пакеты 
- name: install packages
  apt: pkg=$item state=latest
  with_items:
     - postgresql
     - postgresql-contrlib

# создаём пользователя для работы c db 
# сгенерированный пароль будет сохранён в credentials/имя_хоста/postgres/имя_пользователя
- name: create postresql user for some app
  # выполняем с правами пользователя postgres (создаётся при установке postgresql)
  sudo: yes
  sudo_user: postgres 
  postgresql_user:
     user=$db_user
     password=$db_password
     role_attr_flags=LOGIN

# создаём базу данных 
- name: create db
  sudo: yes
  sudo_user: postgres
  action: postgresql_db name=$db_name owner=$db_user encoding='UTF8' lc_collate='en_US.UTF-8' lc_ctype='en_US.UTF-8' template='template0' state=present

# Следующая задача будет выполнена хосте приложения, а не на текущем настраиваемом хосте
- name: add db_user's password to .pg_pass file on server with our app
  sudo: yes
  sudo_user: $ssh_user
  delegate_to: all
  lineinfile:
      dest=/home/${ssh_user}/.pgpass
      regexp='^{{ inventory_hostname }}\:\*\:${db_name}\:${db_user}'
      line='{{ inventory_hostname }}:*:${db_name}:${db_username}:{{ lookup('password','example/credentials/' + inventory_hostname + '/postgres/' + app_username, length=15) }}'
          create=yes
          state=present
          backup=yes

      # добавляем в pg_hba.conf строчку, описываюшую разрешение подключение с ip-адреса приложения для ранее созданной базы и пользователя
#    - name: add entry to pg_hba.conf
#      lineinfile:
#          dest=/etc/postgresql/9.5/main/pg_hba.conf
#          regexp='host ${app_database_name} ${app_username} ${app_host_ip}/32 md5'
#          line='host ${app_database_name} ${app_username} ${app_host_ip}/32 md5' state=present
      # если файл изменился, то вызовем задачу по перечитыванию конфига postgresql
      # напоминаем что модули ansible возвращают состояние "изменилось/не изменилось" после выполнения,
      # хэндлеры описываются либо в конце playbook'a или в отдельном файле
#      notify:
#        - reload postgres

      # по умолчанию postgresql слушает только localhost
      # изменияем соответствующий параметр в postgresql.conf на ip-адрес сервера
#    - name: add entry to postgresql
#      lineinfile:
#          dest=/etc/postgresql/9.5/main/postgresql.conf
#          regexp='^listen_addresses'
#          line="listen_addresses = '${ansible_default_ipv4.address}'"
#          state=present
      # если файл изменился, то вызовем задачу по перезапуску postgresql, т.к.
      # параметр listen_addresses можно изменить только перезагрузкой сервера postgresql
#      notify:
#        - restart postgres

